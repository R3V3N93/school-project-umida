class Handler : EventHandler
{
    DebugInfo debug;
    //01
    //23
    Vector3 screenBorder[4];
    Harpoon mouse;

    double screenXLeft;
    double screenXRight;
    double screenYUp;
    double screenYDown;

    int gamestate;
    int timer; // tic
    int spawngap; // tic
    int score;
    int combo;
    int combotimer; // tic
    double health;

    override void PlayerSpawned(PlayerEvent e)
    {
        if(Level.Mapname == "TEST")
            return;
        Playerinfo p = players[e.PlayerNumber];
        p.mo.SetOrigin(p.mo.pos + (0, 0, 500), false);
		p.cheats |= CF_TOTALLYFROZEN;
		p.mo.Pitch = 90;
    }

    void setSpawngap()
    {
        spawngap = random(5, 70);
        return;
    }

    void damagePlayer()
    {
        self.health -= Cvar.GetCVar("sv_health_max").GetFloat() / 4.0;
    }

    void healPlayer(double health)
    {
        self.health += health;
    }

    void grantScore(int selftimer)
    {
        score++;
        return;
    }

    override void OnRegister () 
	{
        debug = DebugInfo(Eventhandler.Find("Debuginfo"));
        setSpawngap();
        self.health = Cvar.GetCVar("sv_health_max").GetFloat();
        mouse = Harpoon(Eventhandler.Find("Harpoon"));
	}

    override void WorldTick()
    {
        debug.AddMInfoItem(self.GetClassName().." : Screen left top = "..screenBorder[0]);
        debug.AddMInfoItem(self.GetClassName().." : Screen Right top = "..screenBorder[1]);
        debug.AddMInfoItem(self.GetClassName().." : Screen left bottom = "..screenBorder[2]);
        debug.AddMInfoItem(self.GetClassName().." : Screen right bottom = "..screenBorder[3]);
        screenXLeft = screenBorder[0].x;
        screenXRight = screenBorder[3].x;
        screenYUp = screenBorder[0].y;
        screenYDown = screenBorder[3].y;

        debug.AddMInfoItem(self.GetClassName().." : spawngap = "..spawngap);
        spawngap--;
        if(spawngap <= 0)
        {   
            Actor r3v3n93innutshell = actor.Spawn("Trash", (screenXRight - 100.0, random(-screenYDown * 1/2, screenYDown), screenborder[3].z));
            if(!r3v3n93innutshell)
                debug.LogError(self.GetClassName().." : Trash not spawned!");
            r3v3n93innutshell.vel.x = -10.0;
            Trash(r3v3n93innutshell).game = self;

            setSpawngap();
        }

        if(combotimer > 0) 
        {
            combotimer--;
            debug.AddMInfoItem(self.GetClassName().." : Combo Timer = "..combotimer);
        }
    }
}