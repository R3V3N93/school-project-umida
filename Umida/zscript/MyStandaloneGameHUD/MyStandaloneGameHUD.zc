class TrashGauge ui
{
	int x;
	int y;
	int cur;
	int max;
}

class MyStandaloneGameHUD : BaseStatusBar
{
	HUDFont mHUDFont;
	HUDFont mBigFont;
	UmidaPlayer pmo;
	Handler game;
	Debuginfo debug;

	override void Init(void)
	{
		Super.Init();
		SetSize(0, Screen.GetWidth(), Screen.GetHeight());
		Font fnt = SmallFont;
		mHUDFont = HUDFont.Create(fnt, fnt.GetCharWidth("0"), Mono_CellLeft, 1, 1);
		mBigFont = HUDFont.Create(BigFont, BigFont.GetCharWidth("0"), Mono_CellLeft, 1, 1);
		debug = Debuginfo(EventHandler.Find("Debuginfo"));
	}

	override void Draw(int state, double TicFrac)
	{
		self.game = Handler(EventHandler.Find("Handler"));
		if (CPlayer && CPlayer.mo)
		{
			pmo = UmidaPlayer(CPlayer.mo);
		}

		BaseStatusBar.Draw(state, TicFrac);

		if (state == HUD_StatusBar || state == HUD_Fullscreen)
		{
			BeginHUD(forcescaled: true);
			if(game)
			{
				DrawTrashGauge();
				DrawLeftTop();
				DrawTimer();
				DrawCombo();
				DrawCredit();
			}
		}
	}

	void DrawLeftTop(int offsetx = 0, int offsety = 0)
	{
		int x = 280 * Screen.GetWidth() / 1920;
		int yHealth = 90 * Screen.GetHeight() / 1080;
		int sizeX, sizeY;
		[sizeX, sizeY] = Texman.GetSize(Texman.CheckForTexture("graphics/healthbg.png"));
		DrawBar("graphics/health.png", "graphics/healthbg.png", game.health, Cvar.GetCVar("sv_health_max").GetFloat(), (x, yHealth), 0, 0, DI_SCREEN_LEFT_TOP|DI_ITEM_CENTER|DI_FORCESCALE, 1.0);	

		string score = "000000";
		score.Remove(6 - String.Format("%d", game.score).length(), String.Format("%d", game.score).length());
		score.AppendFormat("%d", game.score);

		DrawString(mBigFont, score, (x, yHealth + sizeY), DI_SCREEN_LEFT_TOP|DI_TEXT_ALIGN_CENTER, translation : Font.CR_WHITE, scale : (5, 5));
		//DrawString(mHUDFont, "Health : "..int(game.health), (Screen.GetWidth() / 8, Screen.GetHeight() / 8 + mHUDFont.mfont.GetHeight()));
	}

	void DrawTimer(int offsetx = 0, int offsety = 0)
	{
		int x = Screen.GetWidth() / 2;
		int y = 45 * Screen.GetHeight() / 1080;

		DrawString(mBigFont, String.Format("%d", game.timer / 35), (x, y), DI_SCREEN_LEFT_TOP|DI_TEXT_ALIGN_CENTER, translation : Font.CR_WHITE, scale : (4, 4));
		//DrawString(mHUDFont, "Health : "..int(game.health), (Screen.GetWidth() / 8, Screen.GetHeight() / 8 + mHUDFont.mfont.GetHeight()));
	}

	void DrawCombo(void)
	{
		if(game.combo > 0)
		{
			DrawString(mHudFont, String.Format("Combo", int(game.combo)), (Screen.GetWidth() / 2, Screen.GetHeight() / 8), DI_TEXT_ALIGN_CENTER, scale : (3, 3), translation : Font.CR_WHITE);
			DrawString(mHudFont, String.Format("%d", int(game.combo)), (Screen.GetWidth() / 2, Screen.GetHeight() / 8 + (mBigFont.mFont.GetHeight() * 3)), DI_TEXT_ALIGN_CENTER, scale : (3, 3), translation : Font.CR_WHITE);
		}
	}

	void DrawCredit(void)
	{
		DrawString(mHudFont, String.Format("Credits %d", int(game.credit)), (Screen.GetWidth() / 2, Screen.GetHeight() * 8 / 9), DI_TEXT_ALIGN_CENTER, scale : (3, 3), translation : Font.CR_WHITE);
	}

	void DrawTrashGauge()
	{
		for(int i = 0; i < game.trashes.size(); i++)
		{
			if(game.trashes[i])
			{
				TrashGauge shit = game.getTrashGauge(game.trashes[i]); //best var name ever
				if(shit)
					//DrawString(mHUDFont, "gauge : "..shit.cur.." / "..shit.max, (shit.x, shit.y));
					DrawBar("graphics/gauge.png", "graphics/gaugebg.png", shit.cur, shit.max, (shit.x, shit.y), 0, SHADER_VERT|SHADER_REVERSE, DI_SCREEN_TOP|DI_ITEM_BOTTOM|DI_ITEM_CENTER, 1.0);
			}
		}
	}
}
